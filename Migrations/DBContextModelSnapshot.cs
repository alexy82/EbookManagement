// <auto-generated />
using System;
using EBOOK_WED_APP.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EBOOK_WED_APP.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EBOOK_WED_APP.Models.Author", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Authors");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Book", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AuthorId");

                    b.Property<int?>("LanguageId");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.Property<int>("Pages");

                    b.Property<string>("Phone");

                    b.Property<string>("Picture");

                    b.Property<int>("Price");

                    b.Property<DateTime>("PublicAt");

                    b.Property<int?>("PublisherId");

                    b.Property<string>("SaveAt");

                    b.Property<int?>("SizeId");

                    b.Property<int>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("LanguageId");

                    b.HasIndex("PublisherId");

                    b.HasIndex("SizeId");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Language", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Languages");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Order", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("CustomerId")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.OrderDetail", b =>
                {
                    b.Property<int?>("BookId");

                    b.Property<int?>("OrderId");

                    b.Property<int?>("Id");

                    b.Property<string>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("BookId", "OrderId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderDetails");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Promotion", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId");

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int>("DiscountPercent");

                    b.Property<int>("DiscountPrice");

                    b.Property<DateTime>("ExpiredDate");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Publisher", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Publishers");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Rating", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BookId");

                    b.Property<string>("Content")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("RatedById");

                    b.Property<DateTime>("Star");

                    b.HasKey("Id");

                    b.HasIndex("BookId");

                    b.HasIndex("RatedById");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Role", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Desc");

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Size", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<string>("Value")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Transaction", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Code")
                        .IsRequired();

                    b.Property<DateTime>("CreatedAt");

                    b.Property<int?>("OrderId");

                    b.Property<double>("Total");

                    b.HasKey("Id");

                    b.HasIndex("OrderId")
                        .IsUnique()
                        .HasFilter("[OrderId] IS NOT NULL");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.User", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address");

                    b.Property<DateTime>("DOB");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("Phone");

                    b.Property<int?>("RoleId")
                        .IsRequired();

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Book", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.Author", "Author")
                        .WithMany("Books")
                        .HasForeignKey("AuthorId");

                    b.HasOne("EBOOK_WED_APP.Models.Language", "Language")
                        .WithMany("Books")
                        .HasForeignKey("LanguageId");

                    b.HasOne("EBOOK_WED_APP.Models.Publisher", "Publisher")
                        .WithMany("Books")
                        .HasForeignKey("PublisherId");

                    b.HasOne("EBOOK_WED_APP.Models.Size", "Size")
                        .WithMany("Books")
                        .HasForeignKey("SizeId");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Order", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.User", "Customer")
                        .WithMany("Orders")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.OrderDetail", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.Book", "Book")
                        .WithMany("OrderDetails")
                        .HasForeignKey("BookId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EBOOK_WED_APP.Models.Order", "Order")
                        .WithMany("OrderDetails")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Promotion", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.Book", "Sách")
                        .WithMany("Promotions")
                        .HasForeignKey("BookId");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Rating", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.Book", "Book")
                        .WithMany("Ratings")
                        .HasForeignKey("BookId");

                    b.HasOne("EBOOK_WED_APP.Models.User", "RatedBy")
                        .WithMany("Ratings")
                        .HasForeignKey("RatedById");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.Transaction", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.Order", "Order")
                        .WithOne("Transaction")
                        .HasForeignKey("EBOOK_WED_APP.Models.Transaction", "OrderId");
                });

            modelBuilder.Entity("EBOOK_WED_APP.Models.User", b =>
                {
                    b.HasOne("EBOOK_WED_APP.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
